swagger: "2.0"
info:
  description: "This is a fun Stonks service. You can find out more about us at [https://github.com/veremchukvv/stonks-test](https://github.com/veremchukvv/stonks-test)."
  version: "1.0.0"
  title: "Stonks"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/mit-license.php"
schemes:
  - "https"
basePath: "/"
tags:
  - name: "profile"
    description: "Operations about user"
  - name: "portfolios"
    description: "Operations about portfolio"
  - name: "stocks"
    description: "Operations about stocks"
paths:
  /login:
    post:
      tags:
        - "profile"
      summary: "Log user into the system"
      description: ""
      operationId: "loginUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: "OAuth general error"
        "401":
          description: "Unauthorized"
  /logout:
    post:
      tags:
        - "profile"
      summary: "Log out current user"
      description: ""
      operationId: "logoutUser"
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
  /profile:
    post:
      tags:
        - "profile"
      summary: "Create new profile"
      description: ""
      operationId: "createProfile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/CreateProfile"
      responses:
        "200":
          description: "successful operation"
    put:
      tags:
        - "profile"
      summary: "Update profile"
      description: ""
      operationId: "updateProfile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/UpdateProfile"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Profile update general error"
    get:
      tags:
        - "profile"
      responses:
        "200":
          description: "successful operation"
  /portfolios:
    post:
      tags:
        - "portfolios"
      summary: "Create new portfolio"
      operationId: "addNewPortfolio"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "New portfolio object that needs to be added to profile"
          required: true
          schema:
            $ref: "#/definitions/Portfolio"
      responses:
        "405":
          description: "Invalid input"
    put:
      tags:
        - "portfolios"
      summary: "Update an existing portfolio"
      description: ""
      operationId: "updatePortfolio"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Update portfolio object"
          required: true
          schema:
            $ref: "#/definitions/Portfolio"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Portfolio not found"
        "405":
          description: "Validation exception"
  /portfolios/{portfolioId}:
    get:
      tags:
        - "portfolios"
      summary: "Find portfolio by ID"
      description: "Returns a single portfolio"
      operationId: "getPortfolioById"
      produces:
        - "application/json"
      parameters:
        - name: "portfolioId"
          in: "path"
          description: "ID of portfolio to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Portfolio"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Portfolio not found"
    delete:
      tags:
        - "portfolios"
      summary: "Delete a portfolio"
      description: ""
      operationId: "deletePortfolio"
      produces:
        - "application/json"
      parameters:
        - name: "portfolioId"
          in: "path"
          description: "Portfolio id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Portfolio not found"
  /stocks:
    get:
      tags:
        - "stocks"
      summary: "Get information sbout stock"
      description: ""
      operationId: "getStocks"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Stocks to search"
          required: true
          schema:
            $ref: "#/definitions/Stock"
      responses:
        "405":
          description: "Invalid input"
        "404":
          description: "Stocks not found"
    post:
      tags:
        - "stocks"
      summary: "Buy stock"
      description: ""
      responses:
        "400":
          description: "General error"
        "405":
          description: "Invalid input"
        "404":
          description: "Stocks not found"
definitions:
  LoginRequest:
    type: "object"
    properties:
      JWT:
        type: "string"
  LoginResponse:
    type: "object"
    properties:
      JWT:
        type: "string"
  CreateProfile:
    type: "object"
    properties:
      JWT:
        type: "string"
  UpdateProfile:
    type: "object"
    properties:
      JWT:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
  Portfolio:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      public:
        type: "boolean"
      stocks:
        type: "array"
        items:
          $ref: "#/definitions/Stock"
  Stock:
    type: "object"
    properties:
      id:
        type: "string"
        description: "ticker"
      name:
        type: "string"
        description: "name of stock"
      type:
        type: "string"
        enum: [bond, stock, fond]
      cost:
        type: "number"
        format: "float"
      lots:
        type: "number"
        format: "int64"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"