// Code generated by go-swagger; DO NOT EDIT.

package stocks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostStocksHandlerFunc turns a function with the right signature into a post stocks handler
type PostStocksHandlerFunc func(PostStocksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostStocksHandlerFunc) Handle(params PostStocksParams) middleware.Responder {
	return fn(params)
}

// PostStocksHandler interface for that can handle valid post stocks params
type PostStocksHandler interface {
	Handle(PostStocksParams) middleware.Responder
}

// NewPostStocks creates a new http.Handler for the post stocks operation
func NewPostStocks(ctx *middleware.Context, handler PostStocksHandler) *PostStocks {
	return &PostStocks{Context: ctx, Handler: handler}
}

/* PostStocks swagger:route POST /stocks stocks postStocks

Buy stock

*/
type PostStocks struct {
	Context *middleware.Context
	Handler PostStocksHandler
}

func (o *PostStocks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostStocksParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
