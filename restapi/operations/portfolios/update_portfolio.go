// Code generated by go-swagger; DO NOT EDIT.

package portfolios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdatePortfolioHandlerFunc turns a function with the right signature into a update portfolio handler
type UpdatePortfolioHandlerFunc func(UpdatePortfolioParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdatePortfolioHandlerFunc) Handle(params UpdatePortfolioParams) middleware.Responder {
	return fn(params)
}

// UpdatePortfolioHandler interface for that can handle valid update portfolio params
type UpdatePortfolioHandler interface {
	Handle(UpdatePortfolioParams) middleware.Responder
}

// NewUpdatePortfolio creates a new http.Handler for the update portfolio operation
func NewUpdatePortfolio(ctx *middleware.Context, handler UpdatePortfolioHandler) *UpdatePortfolio {
	return &UpdatePortfolio{Context: ctx, Handler: handler}
}

/* UpdatePortfolio swagger:route PUT /portfolios portfolios updatePortfolio

Update an existing portfolio

*/
type UpdatePortfolio struct {
	Context *middleware.Context
	Handler UpdatePortfolioHandler
}

func (o *UpdatePortfolio) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdatePortfolioParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
