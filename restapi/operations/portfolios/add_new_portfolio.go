// Code generated by go-swagger; DO NOT EDIT.

package portfolios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AddNewPortfolioHandlerFunc turns a function with the right signature into a add new portfolio handler
type AddNewPortfolioHandlerFunc func(AddNewPortfolioParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddNewPortfolioHandlerFunc) Handle(params AddNewPortfolioParams) middleware.Responder {
	return fn(params)
}

// AddNewPortfolioHandler interface for that can handle valid add new portfolio params
type AddNewPortfolioHandler interface {
	Handle(AddNewPortfolioParams) middleware.Responder
}

// NewAddNewPortfolio creates a new http.Handler for the add new portfolio operation
func NewAddNewPortfolio(ctx *middleware.Context, handler AddNewPortfolioHandler) *AddNewPortfolio {
	return &AddNewPortfolio{Context: ctx, Handler: handler}
}

/* AddNewPortfolio swagger:route POST /portfolios portfolios addNewPortfolio

Create new portfolio

*/
type AddNewPortfolio struct {
	Context *middleware.Context
	Handler AddNewPortfolioHandler
}

func (o *AddNewPortfolio) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddNewPortfolioParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
