// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetProfileHandlerFunc turns a function with the right signature into a get profile handler
type GetProfileHandlerFunc func(GetProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetProfileHandlerFunc) Handle(params GetProfileParams) middleware.Responder {
	return fn(params)
}

// GetProfileHandler interface for that can handle valid get profile params
type GetProfileHandler interface {
	Handle(GetProfileParams) middleware.Responder
}

// NewGetProfile creates a new http.Handler for the get profile operation
func NewGetProfile(ctx *middleware.Context, handler GetProfileHandler) *GetProfile {
	return &GetProfile{Context: ctx, Handler: handler}
}

/* GetProfile swagger:route GET /profile profile getProfile

GetProfile get profile API

*/
type GetProfile struct {
	Context *middleware.Context
	Handler GetProfileHandler
}

func (o *GetProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetProfileParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
