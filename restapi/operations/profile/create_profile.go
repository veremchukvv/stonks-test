// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateProfileHandlerFunc turns a function with the right signature into a create profile handler
type CreateProfileHandlerFunc func(CreateProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateProfileHandlerFunc) Handle(params CreateProfileParams) middleware.Responder {
	return fn(params)
}

// CreateProfileHandler interface for that can handle valid create profile params
type CreateProfileHandler interface {
	Handle(CreateProfileParams) middleware.Responder
}

// NewCreateProfile creates a new http.Handler for the create profile operation
func NewCreateProfile(ctx *middleware.Context, handler CreateProfileHandler) *CreateProfile {
	return &CreateProfile{Context: ctx, Handler: handler}
}

/* CreateProfile swagger:route POST /profile profile createProfile

Create new profile

*/
type CreateProfile struct {
	Context *middleware.Context
	Handler CreateProfileHandler
}

func (o *CreateProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateProfileParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
